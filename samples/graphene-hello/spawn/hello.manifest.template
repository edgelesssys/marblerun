loader.preload = "file:$(GRAPHENEDIR)/Runtime/libsysdb.so"
loader.env.LD_LIBRARY_PATH = "/lib"

# entrypoint must be premain-graphene
libos.entrypoint = "file:premain-graphene"
sgx.trusted_files.premain = "file:premain-graphene"

# argv0 must be the path to the actual application
loader.argv0_override = "hello"

# required and ok because premain will filter host env
loader.insecure__use_host_env = 1

fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:$(GRAPHENEDIR)/Runtime"

sgx.trusted_files.ld = "file:$(GRAPHENEDIR)/Runtime/ld-linux-x86-64.so.2"
sgx.trusted_files.libc = "file:$(GRAPHENEDIR)/Runtime/libc.so.6"
sgx.trusted_files.pthread = "file:$(GRAPHENEDIR)/Runtime/libpthread.so.0"
sgx.trusted_files.hello = "file:hello"

# allow the marble's uuid file
sgx.allowed_files.uuid = "file:uuid"

# enable DCAP
sgx.remote_attestation = 1

# enclave must have enough memory and threads
sgx.enclave_size = "1024M"
sgx.thread_num = 16

# the following is only required if you need DNS resolution
fs.mount.etc.type = "chroot"
fs.mount.etc.path = "/etc"
fs.mount.etc.uri = "file:/etc"
sgx.trusted_files.nss = "file:$(GRAPHENEDIR)/Runtime/libnss_dns.so.2"
sgx.trusted_files.resolv = "file:$(GRAPHENEDIR)/Runtime/libresolv.so.2"
sgx.allowed_files.hosts = "file:/etc/hosts"
sgx.allowed_files.resolv = "file:/etc/resolv.conf"
