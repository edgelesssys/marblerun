loader.preload = "file:{{ gramine.libos }}"
loader.env.LD_LIBRARY_PATH = "/lib"

# entrypoint must be premain-libos
libos.entrypoint = "premain-libos"

# argv0 must be the path to the actual application
loader.argv0_override = "hello"

# Forward EDG environment variables, used by MarbleRun
loader.env.EDG_MARBLE_TYPE = { passthrough = true }
loader.env.EDG_MARBLE_COORDINATOR_ADDR = { passthrough = true }
loader.env.EDG_MARBLE_UUID_FILE = { passthrough = true }
loader.env.EDG_MARBLE_DNS_NAMES = { passthrough = true }

# FS mount points
fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:{{ gramine.runtimedir() }}"

# the following is only required if you need DNS resolution
fs.mount.etc.type = "chroot"
fs.mount.etc.path = "/etc"
fs.mount.etc.uri = "file:/etc"

# trusted files
sgx.trusted_files = [
    "file:{{ gramine.runtimedir() }}/libnss_dns.so.2",
    "file:{{ gramine.runtimedir() }}/libnss_files.so.2",
    "file:{{ gramine.runtimedir() }}/libresolv.so.2",
    "file:{{ gramine.runtimedir() }}/ld-linux-x86-64.so.2",
    "file:{{ gramine.runtimedir() }}/libc.so.6",
    "file:{{ gramine.runtimedir() }}/libpthread.so.0",
    "file:premain-libos",
    "file:hello"
]

# allowed files
sgx.allowed_files = [
    "file:/etc/hosts",
    "file:/etc/host.conf",
    "file:/etc/gai.conf",
    "file:/etc/resolv.conf",
    "file:/etc/localtime",
    "file:/etc/nsswitch.conf",
    "file:uuid"
]

# enable DCAP
sgx.remote_attestation = true

# enclave must have enough memory and threads
sgx.enclave_size = "1024M"
sgx.thread_num = 16

# create a debug enclave by default
sgx.debug = true