{{- if .Values.marbleInjector.start }}
apiVersion: v1
kind: Service
metadata:
  name: marble-injector
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: admission-controller-svc
    app.kubernetes.io/created-by: {{ .Values.global.createdBy }}
    app.kubernetes.io/name: marble-injector
    app.kubernetes.io/part-of: marblerun
    app.kubernetes.io/version: "{{ .Values.marbleInjector.version }}"
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: marble-injector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: marble-injector
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/created-by: {{ .Values.global.createdBy }}
    app.kubernetes.io/name: marble-injector
    app.kubernetes.io/part-of: marblerun
    app.kubernetes.io/version: "{{ .Values.marbleInjector.version }}"
    {{ .Values.global.coordinatorComponentLabel }}: admission-controller
    {{ .Values.global.coordinatorNamespaceLabel }}: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.marbleInjector.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: marble-injector
      app.kubernetes.io/part-of: marblerun
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/created-by: {{ .Values.global.createdBy }}
        app.kubernetes.io/name: marble-injector
        app.kubernetes.io/part-of: marblerun
        app.kubernetes.io/version: "{{ .Values.marbleInjector.version }}"
        {{ .Values.global.coordinatorComponentLabel }}: admission-controller
        {{ .Values.global.coordinatorNamespaceLabel }}: {{ .Release.Namespace }}
        {{- with .Values.global.podLabels }}{{ toYaml . | trim | nindent 8 }}{{- end }}
      annotations:
        openservicemesh.io/sidecar-injection: disabled
    spec:
      containers:
      - args:
        - -coordAddr=coordinator-mesh-api.{{ .Release.Namespace }}:{{ .Values.coordinator.meshServerPort }}
        - -tlsCertFile=/etc/webhook/certs/tls.crt
        - -tlsKeyFile=/etc/webhook/certs/tls.key
        - -sgxResource={{ .Values.marbleInjector.resourceKey }}
        name: marble-injector
        image: "{{ .Values.marbleInjector.repository }}/{{ .Values.marbleInjector.image }}:{{ .Values.marbleInjector.version }}"
        imagePullPolicy: {{ .Values.marbleInjector.pullPolicy }}
        volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
            readOnly: true
        ports:
          - containerPort: 8443
            name: http
      volumes:
      - name: webhook-certs
        secret:
          secretName: marble-injector-webhook-certs
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: marble-injector-{{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: admission-controller-configuration
    app.kubernetes.io/created-by: {{ .Values.global.createdBy }}
    app.kubernetes.io/name: marble-injector
    app.kubernetes.io/part-of: marblerun
    app.kubernetes.io/version: "{{ .Values.marbleInjector.version }}"
  {{- if eq .Values.marbleInjector.CABundle "" }}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/marble-injector-serving-cert
  {{- end }}
webhooks:
  - name: marble-injector-{{ .Release.Namespace }}.cluster.local
    clientConfig:
      {{- if ne .Values.marbleInjector.CABundle "" }}
      caBundle: {{ .Values.marbleInjector.CABundle }}
      {{- end }}
      service:
        name: marble-injector
        namespace: {{ .Release.Namespace }}
        path: "/mutate"
    rules:
    - operations: ["CREATE"]
      apiGroups: [""]
      apiVersions: ["v1"]
      resources: ["pods"]
      scope: "Namespaced"
    {{- with .Values.marbleInjector.objectSelector }}
    objectSelector:
      {{- . | toYaml | nindent 6 }}
    {{- end }}
    {{- with .Values.marbleInjector.namespaceSelector }}
    namespaceSelector:
      {{- . | toYaml | nindent 6 }}
    {{- end }}
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
{{- end }}
